# Fail2Ban jail configuration file
#
# This file was AUTOMATICALLY GENERATED by Ansible
# Manual changes will be overwritten.
#
# Comments: use '#' for comment lines and ';' (following a space) for inline comments
#
# Changes:  in most of the cases you should not modify this
#           file, but provide customizations in jail.local file, e.g.:
#
# [DEFAULT]
# bantime = 3600
#
# [ssh-iptables]
# enabled = true
#
# See the MANUAL for details.

[DEFAULT]

# "bantime" is the number of seconds that a host is banned.
bantime = {{ fail2ban_default_bantime }}

# A host is banned if it has generated "maxretry" during the last "findtime"
# seconds.
findtime = {{ fail2ban_default_findtime }}

# "maxretry" is the number of failures before a host get banned.
maxretry = {{ fail2ban_default_maxretry }}

# "backend" specifies the backend used to get files modification.
# Available options are "pyinotify", "gamin", "polling", "systemd" and "auto".
# This option can be overridden in each jail as well.
backend = {{ fail2ban_default_backend }}

# "usedns" specifies if jails should trust hostnames in logs,
#   warn when DNS lookups are performed, or ignore all hostnames in logs
#
# yes:   if a hostname is encountered, a DNS lookup will be performed.
# warn:  if a hostname is encountered, a DNS lookup will be performed,
#        but it will be logged as a warning.
# no:    if a hostname is encountered, will not be used for banning,
#        but it will be logged as info.
# raw:   use raw value (no hostname), allow use it for no-host filters/actions (example user)
usedns = warn

# "logencoding" specifies the encoding of the log files handled by the jail
#   This is used to decode the lines from the log file.
#   Typical examples:  "ascii", "utf-8"
#
#   auto:   will use the system locale setting
logencoding = auto

# "enabled" enables the jails.
#  By default all jails are disabled, and it should stay this way.
#  Enable only relevant to your setup jails in your .local or jail.d/*.conf
#
# true:  jail will be enabled and log files will get monitored for changes
# false: jail is not enabled
enabled = false

# "mode" defines the mode of the filter (see corresponding filter implementation for more info).
mode = normal

# "filter" defines the filter to use by the jail.
#  By default jails have names matching their filter name
#
filter = %(__name__)s[mode=%(mode)s]

#
# ACTIONS
#

# Some options used for actions

# Destination email address used solely for the interpolations in
# jail.{conf,local,d/*} configuration files.
destemail = {{ fail2ban_destemail }}

# Sender email address used solely for some actions
sender = {{ fail2ban_sender }}

# E-mail subject.
# Replaces <HOST> with offending host's IP address
# and <JAIL> with the name of the jail.
subject = [Fail2Ban] <JAIL>: banned <HOST>

# E-mail message.
# Replaces <HOST> with offending host's IP address,
# <JAIL> with the name of the jail,
# <COUNT> with number of bans,
# <ACTION> with the action name,
# <BANTIME> with the duration of the ban.
message = Hi,<br>
          <br>
          The IP <HOST> has just been banned by Fail2Ban after
          <COUNT> attempts against <JAIL>.<br>
          <br>
          Here are more information about <HOST>:<br>
          <br>
          Lines containing IP:<HOST> in <LOGPATH><br>
          <MATCHES><br>
          <br>
          Regards,<br>
          <br>
          Fail2Ban

# Default banning action (e.g. iptables, iptables-new,
# iptables-multiport, shorewall, etc) It is used to define
# action_* variables. Can be overridden globally or per
# section within jail.local file
banaction = {{ fail2ban_default_banaction }}
banaction_allports = {{ fail2ban_default_banaction_allports }}

# The simplest action to take: ban only
action_ = %(banaction)s[name=%(__name__)s, bantime="%(bantime)s", port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]

# ban & send an e-mail with whois report to the destemail.
action_mw = %(banaction)s[name=%(__name__)s, bantime="%(bantime)s", port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]
            %(mta)s-whois[name=%(__name__)s, sender="%(sender)s", dest="%(destemail)s", protocol="%(protocol)s", chain="%(chain)s"]

# ban & send an e-mail with whois report and relevant log lines
# to the destemail.
action_mwl = %(banaction)s[name=%(__name__)s, bantime="%(bantime)s", port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]
             %(mta)s-whois-lines[name=%(__name__)s, sender="%(sender)s", dest="%(destemail)s", logpath="%(logpath)s", chain="%(chain)s"]

# See the MANUAL for details on what is available.
action = {{ fail2ban_default_action }}

#
# JAILS
#

{% for jail in fail2ban_jails %}
[{{ jail.name }}]
enabled = {{ jail.enabled | default(false) | lower }}
{% if jail.port is defined %}
port = {{ jail.port }}
{% endif %}
{% if jail.filter is defined %}
filter = {{ jail.filter }}
{% endif %}
{% if jail.logpath is defined %}
logpath = {{ jail.logpath }}
{% endif %}
{% if jail.maxretry is defined %}
maxretry = {{ jail.maxretry }}
{% endif %}
{% if jail.bantime is defined %}
bantime = {{ jail.bantime }}
{% endif %}
{% if jail.findtime is defined %}
findtime = {{ jail.findtime }}
{% endif %}
{% if jail.action is defined %}
action = {{ jail.action }}
{% endif %}
{% if jail.backend is defined %}
backend = {{ jail.backend }}
{% endif %}
{% if jail.ignoreip is defined %}
ignoreip = {{ jail.ignoreip | join(' ') }}
{% endif %}

{% endfor %}